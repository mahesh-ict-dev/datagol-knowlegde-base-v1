"use strict";(self.webpackChunkdg_knowlege_base=self.webpackChunkdg_knowlege_base||[]).push([[2541],{1976:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/Add_a_heading-a3bd27dc1736c31d4f90e7a00bb15a7f.png"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var a=s(6540);const t={},o=a.createContext(t);function i(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(o.Provider,{value:n},e.children)}},8761:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Lakehouse/Lakehouse workflow/Lakehouse workflow","title":"Lakehouse workflow","description":"heading","source":"@site/docs/Lakehouse/Lakehouse workflow/Lakehouse workflow.mdx","sourceDirName":"Lakehouse/Lakehouse workflow","slug":"/Lakehouse/Lakehouse workflow/","permalink":"/datagol-knowlegde-base-v1/docs/Lakehouse/Lakehouse workflow/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Lakehouse/Lakehouse workflow/Lakehouse workflow.mdx","tags":[{"inline":true,"label":"User","permalink":"/datagol-knowlegde-base-v1/docs/tags/user"},{"inline":true,"label":"Teams","permalink":"/datagol-knowlegde-base-v1/docs/tags/teams"},{"inline":true,"label":"Roles","permalink":"/datagol-knowlegde-base-v1/docs/tags/roles"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"tags":["User","Teams","Roles"]},"sidebar":"tutorialSidebar","previous":{"title":"Datasources","permalink":"/datagol-knowlegde-base-v1/docs/Lakehouse/Datasources"},"next":{"title":"About Lakehouse","permalink":"/datagol-knowlegde-base-v1/docs/Lakehouse/Lakehouse workflow/About Lakehouse"}}');var t=s(4848),o=s(8453);const i={sidebar_position:1,tags:["User","Teams","Roles"]},r=void 0,l={},c=[];function d(e){const n={a:"a",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"heading",src:s(1976).A+"",width:"1920",height:"1080"})}),"\n",(0,t.jsxs)(n.p,{children:["(blob:",(0,t.jsx)(n.a,{href:"https://saasxl.atlassian.net/aada6d87-a353-47f0-9d5c-0f2431c3de80",children:"https://saasxl.atlassian.net/aada6d87-a353-47f0-9d5c-0f2431c3de80"}),")"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Connecting to data Sources:"})," The journey begins with establishing connections to various ",(0,t.jsx)(n.strong,{children:"data sources"}),". Think of these as the starting points where your raw data lives. These could be relational databases like SQL Server, PostgreSQL, cloud data warehouses like Redshift, or even file storage systems such as S3 or Azure blob.. The crucial function here is to enable the Lakehouse to access the data that needs to be processed and analyzed."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Data ingestion via pipelines:"})," Once the connections are in place, pipelines come into operation. Data ingestion is done via pipelines. Pipelines can get data from REST sources like Salesforce and Hubspot or JIRA or SQL sources like MS SQL, MYSQL or PostgreSQL databases."]}),"\n",(0,t.jsx)(n.p,{children:"Depending on the data source, it can fetch data in various modes. Currently supported modes are Full Refresh, Incremental, Incremental Append only,"}),"\n",(0,t.jsx)(n.p,{children:"The warehouse supports different file formats like parquet and iceberg."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Managing dependencies with orchestration:"})," When dealing with multiple pipelines that need to run in a specific order or have dependencies on each other, ",(0,t.jsx)(n.strong,{children:"orchestration"}),' becomes essential. Imagine a scenario where you need to process customer data before analyzing their purchase history. Orchestration tools allow you to define this logical flow, ensuring that pipelines execute in the correct sequence and that the entire data processing journey runs smoothly. It manages the "when" and "how" of pipeline execution.']}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pipeline job monitoring"}),": The Jobs section provides a centralized view of all pipeline executions, displaying upcoming scheduled jobs alongside currently running and any failed instances based on your selected filters. This allows for comprehensive monitoring of your data pipeline activities."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Continuous monitoring with schema change detection:"})," Running in the background is the schema change detection mechanism. This constantly monitors the structure of the data in the original data sources. If any changes occur at the source level \u2013 for example, a new column is added, a data type is modified, or a table is altered \u2013 the schema change detection identifies these modifications. This is crucial for maintaining the integrity and consistency of the data within the Lakehouse. This is useful to understand the impacted pipelines and visualizations."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Responding to schema changes:"})," When schema changes are detected, the system can alert data engineers or trigger automated processes to handle these changes within the Lakehouse. This might involve updating the data models, modifying existing pipelines, or even creating new ones to accommodate the altered data structure. The goal is to ensure that the Lakehouse remains synchronized with the source data and that downstream analytics and reporting are not negatively impacted by these changes."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In essence, the Lakehouse enables a continuous cycle: connect to data, ingest it through pipelines, orchestrate the flow, and constantly monitor for changes at the source to maintain a reliable and up-to-date data environment for analysis and decision-making."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);