"use strict";(self.webpackChunkdg_knowlege_base=self.webpackChunkdg_knowlege_base||[]).push([[5250],{8138:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Lakehouse/Data Pipeline/Understanding Pipeline Sync modes","title":"Understanding Pipeline Sync modes","description":"Choose any of the following sync mode options:","source":"@site/docs/Lakehouse/Data Pipeline/Understanding Pipeline Sync modes.mdx","sourceDirName":"Lakehouse/Data Pipeline","slug":"/Lakehouse/Data Pipeline/Understanding Pipeline Sync modes","permalink":"/datagol-knowlegde-base-v1/docs/Lakehouse/Data Pipeline/Understanding Pipeline Sync modes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Lakehouse/Data Pipeline/Understanding Pipeline Sync modes.mdx","tags":[{"inline":true,"label":"Pipeline","permalink":"/datagol-knowlegde-base-v1/docs/tags/pipeline"}],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"tags":["Pipeline"]},"sidebar":"tutorialSidebar","previous":{"title":"Pipelines","permalink":"/datagol-knowlegde-base-v1/docs/Lakehouse/Data Pipeline/Pipelines"},"next":{"title":"Managing Pipeline","permalink":"/datagol-knowlegde-base-v1/docs/Lakehouse/Data Pipeline/Managing Pipeline"}}');var t=s(4848),r=s(8453);const o={sidebar_position:4,tags:["Pipeline"]},a=void 0,l={},d=[{value:"Choosing a unique key (column) for the table for merge operation",id:"choosing-a-unique-key-column-for-the-table-for-merge-operation",level:4}];function c(e){const n={a:"a",br:"br",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Choose any of the following sync mode options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Full Refresh|Overwrite: Completely replaces the existing destination data with the latest data from the source."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Full Refresh|Append: Adds all records from the source to the destination without modifying or deleting existing records. Ideal for growing datasets."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Incremental|Append: Adds only new or updated records from the source to the destination since the last synchronization. This is efficient for large datasets where only recent changes are relevant. A cursor field must be selected for the incremental operations. Acceptable data types are limited to the following data types:"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Integers"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"longs/numbers"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Timestamps"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Full refresh|Merge: This mode performs an upsert (insert or update), adding new records and updating existing ones based on a unique key. An Iceberg format destination is required. You must ",(0,t.jsx)(n.a,{href:"https://saasxl.atlassian.net/wiki/spaces/documentation/pages/220692503/DataGOL+Documentation#Choosing-a-unique-key-(column)-for-the-table-for-merge-operation",children:"select a unique column for row identification"}),". Only applicable for Apache Iceberg format."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Incremental|Merge: This mode efficiently updates a target table by processing only changes since the last sync. The specified cursor field or the last updated time is used to perform an upsert (update or insert), appending new records and merging updates to existing ones. ",(0,t.jsx)(n.a,{href:"https://saasxl.atlassian.net/wiki/spaces/documentation/pages/220692503/DataGOL+Documentation#Choosing-a-unique-key-(column)-for-the-table-for-merge-operation",children:"Ensure to define a unique key for the table"}),"; otherwise, the sync mode defaults to Full Refresh | Incremental Append.",(0,t.jsx)(n.br,{}),"\n","Acceptable data types are limited to the following data types:"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Integers"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"longs/numbers"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Timestamps"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://lh7-rt.googleusercontent.com/docsz/AD_4nXc6bNdKrAn5NAQsUCQfVSaqlscJaIJoyrUjYbwl63HgHX4R8AcY1cdDZcKCVkR8sdssRIQI0nLpm1xMNXEWUJm5KBWkVrW2xwU4QyKFyXNLae_W-e7jCJP2Mz0jRGpV_ktA1stJ?key=s_sxVg1rCBeSUBZBz4_qQQ",alt:"Warning"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Incremental|Merge and Full Refresh|Append sync modes are irreversible once saved."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"For merge operations, you must specify unique columns (primary key) for row identification. If not specified, Incremental|Merge defaults to Incremental|Append"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Full refresh|Merge and Incremental|Merge are only valid for Iceberg format. If Parquet is selected with merge operations, a warning is displayed."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Pipelines can transition from Full Refresh to any other mode. However, once it is in Incremental|Append, Full Refresh|Merge, or Incremental|merge modes, it cannot be reverted to full refresh."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"choosing-a-unique-key-column-for-the-table-for-merge-operation",children:"Choosing a unique key (column) for the table for merge operation"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"On the Streams list, from the Output table name column, select the table link."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"In the table details page, click the Column info tab."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Open image-20250224-135624.png"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Click and select Mark as Unique Column option."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Open image-20250224-135820.png"}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);